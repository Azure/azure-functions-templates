<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="eventHubOut_connection_help" xml:space="preserve">
    <value>This is the connection string for your event hub. Make sure that it has Send permissions.</value>
  </data>
  <data name="eventHubOut_connection_label" xml:space="preserve">
    <value>Event Hub connection</value>
  </data>
  <data name="eventHubOut_displayName" xml:space="preserve">
    <value>Azure Event Hub</value>
  </data>
  <data name="eventHubOut_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="eventHubOut_name_label" xml:space="preserve">
    <value>Event parameter name</value>
  </data>
  <data name="eventHubOut_path_errorText" xml:space="preserve">
    <value>Your event hub name must start and end with a letter or number, and it can contain only lowercase letters, numbers, the period, the hyphen, and the underscore.</value>
  </data>
  <data name="eventHubOut_path_help" xml:space="preserve">
    <value>This is the name of the event hub to which the event will be sent.</value>
  </data>
  <data name="eventHubOut_path_label" xml:space="preserve">
    <value>Event Hub name</value>
  </data>
  <data name="eventHubTrigger_connection_help" xml:space="preserve">
    <value>This is the connection string for your event hub. Make sure that it has Receive permissions.</value>
  </data>
  <data name="eventHubTrigger_connection_label" xml:space="preserve">
    <value>Event Hub connection</value>
  </data>
  <data name="eventHubTrigger_consumerGroup_help" xml:space="preserve">
    <value>The name of the Event Hub consumer group to receive events from.</value>
  </data>
  <data name="eventHubTrigger_consumerGroup_label" xml:space="preserve">
    <value>Event Hub consumer group</value>
  </data>
  <data name="eventHubTrigger_displayName" xml:space="preserve">
    <value>Azure Event Hub</value>
  </data>
  <data name="eventHubTrigger_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for trigger to bind to.</value>
  </data>
  <data name="eventHubTrigger_name_label" xml:space="preserve">
    <value>Event parameter name</value>
  </data>
  <data name="eventHubTrigger_path_errorText" xml:space="preserve">
    <value>Your event hub name must start and end with a letter or number, and it can contain only lowercase letters, numbers, the hyphen, the period, and the underscore.</value>
  </data>
  <data name="eventHubTrigger_path_help" xml:space="preserve">
    <value>This is the name of the event hub you would like to trigger off of.</value>
  </data>
  <data name="eventHubTrigger_path_label" xml:space="preserve">
    <value>Event Hub name</value>
  </data>
  <data name="queueOut_displayName" xml:space="preserve">
    <value>Azure Storage Queue</value>
  </data>
  <data name="queueOut_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="queueOut_name_label" xml:space="preserve">
    <value>Message parameter name</value>
  </data>
  <data name="queueOut_queueName_errorText" xml:space="preserve">
    <value>Your queue name must start and end with a letter or number, and it can contain only lowercase letters, numbers, and the hyphen. The name must be 3 to 63 characters.</value>
  </data>
  <data name="queueOut_queueName_label" xml:space="preserve">
    <value>Warteschlangenname</value>
  </data>
  <data name="queueOut_queueName_help" xml:space="preserve">
    <value>This is the queue to which the message will be sent. If the queue doesn't exist yet, one will be created for you in the specifed storage account.</value>
  </data>
  <data name="temp_category_core" xml:space="preserve">
    <value>Kern</value>
  </data>
  <data name="temp_category_dataProcessing" xml:space="preserve">
    <value>Data Processing</value>
  </data>
  <data name="temp_timerTrigger_CSharp_desc" xml:space="preserve">
    <value>A C# function that will be run on a specified schedule</value>
  </data>
  <data name="temp_timerTrigger_CSharp_name" xml:space="preserve">
    <value>TimerTrigger - C#</value>
  </data>
  <data name="timerTrigger_displayName" xml:space="preserve">
    <value>Timer</value>
  </data>
  <data name="timerTrigger_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for trigger to bind to.</value>
  </data>
  <data name="timerTrigger_name_label" xml:space="preserve">
    <value>Timestamp parameter name</value>
  </data>
  <data name="timerTrigger_schedule_help" xml:space="preserve">
    <value>Enter a cron expression of the format '{second} {minute} {hour} {day} {month} {day of week}' to specify your schedule. Please consult the documentation to learn more.</value>
  </data>
  <data name="timerTrigger_schedule_label" xml:space="preserve">
    <value>Zeitplan</value>
  </data>
  <data name="variables_apiHubTableConnectionHelp" xml:space="preserve">
    <value>The connection string for your SaaS Table connection.</value>
  </data>
  <data name="variables_apiHubTableConnectionLabel" xml:space="preserve">
    <value>SaaS Table connection</value>
  </data>
  <data name="variables_apiHubTableDataSetHelp" xml:space="preserve">
    <value>The name of the data set to bind to.  Leave as 'default' if binding to a table or entity.</value>
  </data>
  <data name="variables_apiHubTableDataSetLabel" xml:space="preserve">
    <value>Data Set Name</value>
  </data>
  <data name="variables_apiHubTableEntityHelp" xml:space="preserve">
    <value>The ID of the entity to bind to. Leave empty if binding to a data set or table.</value>
  </data>
  <data name="variables_apiHubTableEntityLabel" xml:space="preserve">
    <value>Entitäts-ID</value>
  </data>
  <data name="variables_apiHubTableHelp" xml:space="preserve">
    <value>The name of the table to bind to. Leave empty if binding to a data set or entity.</value>
  </data>
  <data name="variables_apiHubTableNameLabel" xml:space="preserve">
    <value>Tabellenname</value>
  </data>
  <data name="variables_appSettingsHelp" xml:space="preserve">
    <value>This is the connection string for your storage account.</value>
  </data>
  <data name="variables_parameterName" xml:space="preserve">
    <value>The parameter name must be an alphanumeric string of any number of characters. It can’t start with a number.</value>
  </data>
  <data name="variables_paramNameInputHelp" xml:space="preserve">
    <value>This is the name of the parameter in code for the input binding to bind to.</value>
  </data>
  <data name="variables_paramNameOutputHelp" xml:space="preserve">
    <value>This is the name of the parameter in code for the output binding to bind to.</value>
  </data>
  <data name="variables_selectConnection" xml:space="preserve">
    <value>Click select to choose a connection</value>
  </data>
  <data name="variables_storageConnStringLabel" xml:space="preserve">
    <value>Storage account connection</value>
  </data>
  <data name="variables_paramNameLabel" xml:space="preserve">
    <value>Parametername</value>
  </data>
  <data name="temp_category_all" xml:space="preserve">
    <value>Alle</value>
  </data>
  <data name="temp_category_api" xml:space="preserve">
    <value>API &amp; Webhooks</value>
  </data>
  <data name="temp_category_experimental" xml:space="preserve">
    <value>Experimental</value>
  </data>
  <data name="temp_category_samples" xml:space="preserve">
    <value>Beispiele</value>
  </data>
  <data name="blobOut_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="blobOut_name_label" xml:space="preserve">
    <value>Blob parameter name</value>
  </data>
  <data name="queueTrigger_queueName_help" xml:space="preserve">
    <value>This is the name of the queue from which the message will be read.</value>
  </data>
  <data name="queueTrigger_name_label" xml:space="preserve">
    <value>Message parameter name</value>
  </data>
  <data name="queueTrigger_queueName_errorText" xml:space="preserve">
    <value>Your queue name must start and end with a letter or number, and it can contain only lowercase letters, numbers, and the hyphen. The name must be 3 to 63 characters.</value>
  </data>
  <data name="queueTrigger_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for trigger to bind to.</value>
  </data>
  <data name="queueTrigger_queueName_label" xml:space="preserve">
    <value>Warteschlangenname</value>
  </data>
  <data name="blobOut_path_help" xml:space="preserve">
    <value>This is the path within your storage account to which the blob will be written.</value>
  </data>
  <data name="blobOut_path_errorTex" xml:space="preserve">
    <value>Your blob path must be a container name of 3 to 63 characters, followed by a blob name of 1 to 1,024 characters.The blob name can be any combination of characters and can contain a maximum of 254 path segments, which are separated by the forward slash(/).</value>
  </data>
  <data name="blobOut_path_label" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="blobIn_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for input binding to bind to.</value>
  </data>
  <data name="blobIn_name_label" xml:space="preserve">
    <value>Blob parameter name</value>
  </data>
  <data name="blobIn_path_help" xml:space="preserve">
    <value>This is the path within your storage account from which the blob will be read.</value>
  </data>
  <data name="blobIn_path_label" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="blobIn_patherrorText" xml:space="preserve">
    <value>Your blob path must be a container name of 3 to 63 characters, followed by a blob name of 1 to 1,024 characters. The blob name can be any combination of characters and can contain a maximum of 254 path segments, which are separated by the forward slash (/).</value>
  </data>
  <data name="blobTrigger_name_label" xml:space="preserve">
    <value>Blob parameter name</value>
  </data>
  <data name="blobTrigger_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for trigger to bind to.</value>
  </data>
  <data name="blobTrigger_path_label" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="blobTrigger_path_help" xml:space="preserve">
    <value>This is the path within your storage account that the trigger will monitor.</value>
  </data>
  <data name="blobTrigger_path_errorTex" xml:space="preserve">
    <value>Your blob path must be a container name of 3 to 63 characters, followed by a blob name of 1 to 1,024 characters. The blob name can be any combination of characters and can contain a maximum of 254 path segments, which are separated by the forward slash (/).</value>
  </data>
  <data name="apiHubFileIn_name_label" xml:space="preserve">
    <value>File parameter name</value>
  </data>
  <data name="apiHubFileIn_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="apiHubFileIn_path_label" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="apiHubFileIn_path_help" xml:space="preserve">
    <value>The input file path</value>
  </data>
  <data name="apiHubFileIn_connection_label" xml:space="preserve">
    <value>SaaS File connection</value>
  </data>
  <data name="apiHubFileIn_connection_help" xml:space="preserve">
    <value>The connection string to your SaaS File connection.</value>
  </data>
  <data name="apiHubFileTrigger_name_label" xml:space="preserve">
    <value>File parameter name</value>
  </data>
  <data name="apiHubFileTrigger_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for trigger to bind to.</value>
  </data>
  <data name="apiHubFileTrigger_path_label" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="apiHubFileTrigger_path_help" xml:space="preserve">
    <value>The path to trigger on. This path must exist.</value>
  </data>
  <data name="apiHubFileTrigger_connection_label" xml:space="preserve">
    <value>SaaS File connection</value>
  </data>
  <data name="apiHubFileTrigger_connection_help" xml:space="preserve">
    <value>The connection string to your SaaS File connection.</value>
  </data>
  <data name="apiHubTableIn_displayName" xml:space="preserve">
    <value>SaaS Table</value>
  </data>
  <data name="apiHubTableOut_displayName" xml:space="preserve">
    <value>SaaS Table</value>
  </data>
  <data name="httpTrigger_displayName" xml:space="preserve">
    <value>HTTP</value>
  </data>
  <data name="httpTrigger_name_label" xml:space="preserve">
    <value>Request parameter name</value>
  </data>
  <data name="httpTrigger_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for trigger to bind to.</value>
  </data>
  <data name="httpTrigger_webHookType_label" xml:space="preserve">
    <value>Webhook type</value>
  </data>
  <data name="httpTrigger_webHookType_help" xml:space="preserve">
    <value>Webhooks allow services to call one another easily.</value>
  </data>
  <data name="httpTrigger_authLevel_label" xml:space="preserve">
    <value>Authorization level</value>
  </data>
  <data name="httpTrigger_mode_label" xml:space="preserve">
    <value>Modus</value>
  </data>
  <data name="httpTrigger_mode_help" xml:space="preserve">
    <value>This is the mode of the trigger. "Standard" means that the request will be standard HTTP with no additional semantics. "Webhook" means that the request will be processed according to a specified webhook type.</value>
  </data>
  <data name="apiHubFileIn_displayName" xml:space="preserve">
    <value>SaaS File</value>
  </data>
  <data name="apiHubFileTrigger_displayName" xml:space="preserve">
    <value>SaaS File Trigger</value>
  </data>
  <data name="blobIn_displayName" xml:space="preserve">
    <value>Azure Storage Blob</value>
  </data>
  <data name="blobOut_displayName" xml:space="preserve">
    <value>Azure Storage Blob</value>
  </data>
  <data name="blobTrigger_displayName" xml:space="preserve">
    <value>Azure Storage Blob</value>
  </data>
  <data name="documentDBIn_collectionName_help" xml:space="preserve">
    <value>This is the name of the collection within your database from which data will be read.</value>
  </data>
  <data name="documentDBIn_collectionName_label" xml:space="preserve">
    <value>Sammlungsname</value>
  </data>
  <data name="documentDBIn_connection_help" xml:space="preserve">
    <value>This is the connection string for your DocumentDB account.</value>
  </data>
  <data name="documentDBIn_connection_label" xml:space="preserve">
    <value>DocumentDB account connection</value>
  </data>
  <data name="documentDBIn_databaseName_help" xml:space="preserve">
    <value>This is the name of the database within your DocumentDB account from which data will be read.</value>
  </data>
  <data name="documentDBIn_databaseName_label" xml:space="preserve">
    <value>Datenbankname</value>
  </data>
  <data name="documentDBIn_displayName" xml:space="preserve">
    <value>Azure DocumentDB Document</value>
  </data>
  <data name="documentDBIn_id_help" xml:space="preserve">
    <value>This is the ID of the document that will be read.</value>
  </data>
  <data name="documentDBIn_id_label" xml:space="preserve">
    <value>Dokument-ID</value>
  </data>
  <data name="documentDBIn_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for input binding to bind to.</value>
  </data>
  <data name="documentDBIn_name_label" xml:space="preserve">
    <value>Document parameter name</value>
  </data>
  <data name="documentDBOut_collectionName_help" xml:space="preserve">
    <value>This is the name of the collection within your database to which data will be written.</value>
  </data>
  <data name="documentDBOut_collectionName_label" xml:space="preserve">
    <value>Sammlungsname</value>
  </data>
  <data name="documentDBOut_connection_help" xml:space="preserve">
    <value>This is the connection string for your DocumentDB account.</value>
  </data>
  <data name="documentDBOut_connection_label" xml:space="preserve">
    <value>DocumentDB account connection</value>
  </data>
  <data name="documentDBOut_createIfNotExists_help" xml:space="preserve">
    <value>When true, your database and collection will be created automatically.</value>
  </data>
  <data name="documentDBOut_createIfNotExists_label" xml:space="preserve">
    <value>Would you like the DocumentDB database and collection to be created for you?</value>
  </data>
  <data name="documentDBOut_databaseName_help" xml:space="preserve">
    <value>This is the name of the database within your DocumentDB account to which data will be written.</value>
  </data>
  <data name="documentDBOut_databaseName_label" xml:space="preserve">
    <value>Datenbankname</value>
  </data>
  <data name="documentDBOut_displayName" xml:space="preserve">
    <value>Azure DocumentDB Document</value>
  </data>
  <data name="documentDBOut_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="documentDBOut_name_label" xml:space="preserve">
    <value>Document parameter name</value>
  </data>
  <data name="httpOut_displayName" xml:space="preserve">
    <value>HTTP</value>
  </data>
  <data name="httpOut_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="httpOut_name_label" xml:space="preserve">
    <value>Response parameter name</value>
  </data>
  <data name="httpTrigger_authLevel_help" xml:space="preserve">
    <value>Authorization level controls whether you're using an API key and which key to use; Function uses your function key; Admin uses your master key. The function &amp; master keys are found in your host secrets file. For user-based authentication, go to Function App Settings.</value>
  </data>
  <data name="manualTrigger_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for trigger to bind to.</value>
  </data>
  <data name="manualTrigger_name_label" xml:space="preserve">
    <value>Parameter name</value>
  </data>
  <data name="mobileTableIn_apiKey_help" xml:space="preserve">
    <value>This is the app setting name that specifies the API Key for your Mobile App. &lt;a target='_blank' href='http:go.microsoft.com/fwlink/?LinkId=780568'&gt;More information&lt;/a&gt;.</value>
  </data>
  <data name="mobileTableIn_apiKey_label" xml:space="preserve">
    <value>API key lookup (optional)</value>
  </data>
  <data name="mobileTableIn_connection_help" xml:space="preserve">
    <value>This is the app setting name that specifies the URL of your Mobile App.</value>
  </data>
  <data name="mobileTableIn_connection_label" xml:space="preserve">
    <value>Mobile App URL lookup</value>
  </data>
  <data name="mobileTableIn_displayName" xml:space="preserve">
    <value>Azure Mobile Table Record</value>
  </data>
  <data name="mobileTableIn_id_help" xml:space="preserve">
    <value>This is the id for the record to retrieve.</value>
  </data>
  <data name="mobileTableIn_id_label" xml:space="preserve">
    <value>Record ID</value>
  </data>
  <data name="mobileTableIn_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for input binding to bind to.</value>
  </data>
  <data name="mobileTableIn_name_label" xml:space="preserve">
    <value>Record parameter name</value>
  </data>
  <data name="mobileTableIn_tableName_help" xml:space="preserve">
    <value>This is the name of the table within your Mobile App from which data will be read.</value>
  </data>
  <data name="mobileTableIn_tableName_label" xml:space="preserve">
    <value>Tabellenname</value>
  </data>
  <data name="mobileTableOut_apiKey_help" xml:space="preserve">
    <value>This is app setting name that specifies the API Key for your Mobile App. &lt;a target='_blank' href='http:go.microsoft.com/fwlink/?LinkId=780568'&gt;More information&lt;/a&gt;.</value>
  </data>
  <data name="mobileTableOut_apiKey_label" xml:space="preserve">
    <value>API key lookup (optional)</value>
  </data>
  <data name="mobileTableOut_connection_help" xml:space="preserve">
    <value>This is the app setting name that specifies the URL of your Mobile App.</value>
  </data>
  <data name="mobileTableOut_connection_label" xml:space="preserve">
    <value>Mobile App URL lookup</value>
  </data>
  <data name="mobileTableOut_displayName" xml:space="preserve">
    <value>Azure Mobile Table Record</value>
  </data>
  <data name="mobileTableOut_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="mobileTableOut_name_label" xml:space="preserve">
    <value>Record parameter name</value>
  </data>
  <data name="mobileTableOut_tableName_help" xml:space="preserve">
    <value>This is the name of the table within your Mobile App to which data will be written.</value>
  </data>
  <data name="mobileTableOut_tableName_label" xml:space="preserve">
    <value>Tabellenname</value>
  </data>
  <data name="notificationHubOut_connection_help" xml:space="preserve">
    <value>This is the connection string for your notification hub namespace.</value>
  </data>
  <data name="notificationHubOut_connection_label" xml:space="preserve">
    <value>Notification Hubs namespace connection</value>
  </data>
  <data name="notificationHubOut_displayName" xml:space="preserve">
    <value>Azure Notification Hub</value>
  </data>
  <data name="notificationHubOut_hubName_help" xml:space="preserve">
    <value>This is the name of the Notification Hub to be used for sending push notifications.</value>
  </data>
  <data name="notificationHubOut_hubName_label" xml:space="preserve">
    <value>Notification Hub-Name</value>
  </data>
  <data name="notificationHubOut_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="notificationHubOut_name_label" xml:space="preserve">
    <value>Notification parameter name</value>
  </data>
  <data name="notificationHubOut_platform_help" xml:space="preserve">
    <value>Choose platform to send native notifcations. Select Template to send template notification.</value>
  </data>
  <data name="notificationHubOut_platform_label" xml:space="preserve">
    <value>Notification Platform</value>
  </data>
  <data name="notificationHubOut_tagExpression_help" xml:space="preserve">
    <value>Tag expressions enable you to target specific sets of devices/registrations, when sending a push notification through notification hubs. Leave this blank to broadcast to all registered devices &lt;a target='_blank' href='http:go.microsoft.com/fwlink/?LinkId=785094'&gt;More information&lt;/a&gt;.</value>
  </data>
  <data name="notificationHubOut_tagExpression_label" xml:space="preserve">
    <value>Tag expression (optional)</value>
  </data>
  <data name="queueTrigger_displayName" xml:space="preserve">
    <value>Azure Storage Queue</value>
  </data>
  <data name="sendGrid_displayName" xml:space="preserve">
    <value>SendGrid</value>
  </data>
  <data name="sendGrid_from_help" xml:space="preserve">
    <value>This is the email address the message is sent from. Can be of the form 'user@host.com' or 'Display Name &lt;user@host.com&gt;'. If not specified here, the value can be specified in code.</value>
  </data>
  <data name="sendGrid_from_label" xml:space="preserve">
    <value>Von Adresse</value>
  </data>
  <data name="sendGrid_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="sendGrid_name_label" xml:space="preserve">
    <value>Message parameter name</value>
  </data>
  <data name="sendGrid_subject_help" xml:space="preserve">
    <value>This is the subject line to use for the message. If not specified here, the value can be specified in code.</value>
  </data>
  <data name="sendGrid_subject_label" xml:space="preserve">
    <value>Message Subject</value>
  </data>
  <data name="sendGrid_text_help" xml:space="preserve">
    <value>This is the text body to use for the message. If not specified here, the value can be specified in code.</value>
  </data>
  <data name="sendGrid_text_label" xml:space="preserve">
    <value>Message Text</value>
  </data>
  <data name="sendGrid_to_help" xml:space="preserve">
    <value>This is the email address the message should be sent to. Can be of the form 'user@host.com' or 'Display Name &lt;user@host.com&gt;'. If not specified here, the value can be specified in code.</value>
  </data>
  <data name="sendGrid_to_label" xml:space="preserve">
    <value>To address</value>
  </data>
  <data name="serviceBusOut_accessRights_help" xml:space="preserve">
    <value>This is the access rights the client has to the queue or topic subscription.</value>
  </data>
  <data name="serviceBusOut_accessRights_label" xml:space="preserve">
    <value>AccessRights</value>
  </data>
  <data name="serviceBusOut_connection_help" xml:space="preserve">
    <value>This is the connection string for your service bus. Make sure that it has Send rights.</value>
  </data>
  <data name="serviceBusOut_connection_label" xml:space="preserve">
    <value>Service Bus-Verbindung</value>
  </data>
  <data name="serviceBusOut_displayName" xml:space="preserve">
    <value>Azure Service Bus</value>
  </data>
  <data name="serviceBusOut_messageType_help" xml:space="preserve">
    <value>This is the type of service bus message. This lets you choose between using Queues or Topics.</value>
  </data>
  <data name="serviceBusOut_messageType_label" xml:space="preserve">
    <value>Nachrichtentyp</value>
  </data>
  <data name="serviceBusOut_messageType_queueName" xml:space="preserve">
    <value>Service Bus-Warteschlange</value>
  </data>
  <data name="serviceBusOut_messageType_topicName" xml:space="preserve">
    <value>Service Bus-Thema</value>
  </data>
  <data name="serviceBusOut_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="serviceBusOut_name_label" xml:space="preserve">
    <value>Message parameter name</value>
  </data>
  <data name="serviceBusOut_queueName_errorText" xml:space="preserve">
    <value>Your queue name must start and end with a letter or number, and it can contain only lowercase letters, numbers, the period, and the hyphen. The name must be 3 to 63 characters.</value>
  </data>
  <data name="serviceBusOut_queueName_help" xml:space="preserve">
    <value>This is the queue to which the message will be sent.</value>
  </data>
  <data name="serviceBusOut_queueName_label" xml:space="preserve">
    <value>Warteschlangenname</value>
  </data>
  <data name="serviceBusOut_topicName_errorText" xml:space="preserve">
    <value>Your topic name must start and end with a letter or number, and it can contain only lowercase letters, numbers, the period, and the hyphen. The name must be 3 to 63 characters.</value>
  </data>
  <data name="serviceBusOut_topicName_help" xml:space="preserve">
    <value>This is the topic to which the message will be sent.</value>
  </data>
  <data name="serviceBusOut_topicName_label" xml:space="preserve">
    <value>Topicname</value>
  </data>
  <data name="serviceBusTrigger_accessRights_help" xml:space="preserve">
    <value>This is the access rights the client has to the queue or topic subscription.</value>
  </data>
  <data name="serviceBusTrigger_accessRights_label" xml:space="preserve">
    <value>AccessRights</value>
  </data>
  <data name="serviceBusTrigger_connection_help" xml:space="preserve">
    <value>This is the connection string for your service bus. Make sure that it has Listen rights.</value>
  </data>
  <data name="serviceBusTrigger_connection_label" xml:space="preserve">
    <value>Service Bus-Verbindung</value>
  </data>
  <data name="serviceBusTrigger_displayName" xml:space="preserve">
    <value>Azure Service Bus</value>
  </data>
  <data name="serviceBusTrigger_messageType_help" xml:space="preserve">
    <value>This is the type of service bus message. This lets you choose between using Queues or Topics.</value>
  </data>
  <data name="serviceBusTrigger_messageType_label" xml:space="preserve">
    <value>Nachrichtentyp</value>
  </data>
  <data name="serviceBusTrigger_messageType_queueName" xml:space="preserve">
    <value>Service Bus-Warteschlange</value>
  </data>
  <data name="serviceBusTrigger_messageType_topicName" xml:space="preserve">
    <value>Service Bus-Thema</value>
  </data>
  <data name="serviceBusTrigger_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for trigger to bind to.</value>
  </data>
  <data name="serviceBusTrigger_name_label" xml:space="preserve">
    <value>Message parameter name</value>
  </data>
  <data name="serviceBusTrigger_queueName_errorText" xml:space="preserve">
    <value>Your queue name must start and end with a letter or number, and it can contain only lowercase letters, numbers, the period, and the hyphen. The name must be 3 to 63 characters.</value>
  </data>
  <data name="serviceBusTrigger_queueName_help" xml:space="preserve">
    <value>This is the name of the queue from which the message will be read.</value>
  </data>
  <data name="serviceBusTrigger_queueName_label" xml:space="preserve">
    <value>Warteschlangenname</value>
  </data>
  <data name="serviceBusTrigger_subscriptionName_errorText" xml:space="preserve">
    <value>Your subscription name must start and end with a letter or number, and it can contain only lowercase letters, numbers, the period, and the hyphen. The name must be 3 to 63 characters.</value>
  </data>
  <data name="serviceBusTrigger_subscriptionName_help" xml:space="preserve">
    <value>This is the name of the subscription within the topic to bind to.</value>
  </data>
  <data name="serviceBusTrigger_subscriptionName_label" xml:space="preserve">
    <value>Abonnementname</value>
  </data>
  <data name="serviceBusTrigger_topicName_errorText" xml:space="preserve">
    <value>Your topic name must start and end with a letter or number, and it can contain only lowercase letters, numbers, the period, and the hyphen. The name must be 3 to 63 characters.</value>
  </data>
  <data name="serviceBusTrigger_topicName_help" xml:space="preserve">
    <value>This is the name of the topic from which the message will be read.</value>
  </data>
  <data name="serviceBusTrigger_topicName_label" xml:space="preserve">
    <value>Topicname</value>
  </data>
  <data name="tableIn_displayName" xml:space="preserve">
    <value>Azure Storage Table</value>
  </data>
  <data name="tableIn_filter_help" xml:space="preserve">
    <value>This is an optional query expression used to filter the results of the table query.This setting is not applicable to a C# function.</value>
  </data>
  <data name="tableIn_filter_label" xml:space="preserve">
    <value>Query filter (optional)</value>
  </data>
  <data name="tableIn_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for input binding to bind to.</value>
  </data>
  <data name="tableIn_name_label" xml:space="preserve">
    <value>Table parameter name</value>
  </data>
  <data name="tableIn_partitionKey_help" xml:space="preserve">
    <value>This is the value of Partition key column of the table. The records with matching Partition key and Row key will be returned. Row key setting must be configured with Partiton key setting.</value>
  </data>
  <data name="tableIn_partitionKey_label" xml:space="preserve">
    <value>Partition key (optional)</value>
  </data>
  <data name="tableIn_rowKey_help" xml:space="preserve">
    <value>This is the value of Row key column of the table. The record with matching Row key and Partition key will be returned. Partiton key setting must be configured with Row key setting.</value>
  </data>
  <data name="tableIn_rowKey_label" xml:space="preserve">
    <value>Row key (optional)</value>
  </data>
  <data name="tableIn_tableName_errorText" xml:space="preserve">
    <value>Your table name must be an alphanumeric string of 3 to 63 characters. It can’t start with a number.</value>
  </data>
  <data name="tableIn_tableName_help" xml:space="preserve">
    <value>This is the name of the table within your storage account from which the data will be read.</value>
  </data>
  <data name="tableIn_tableName_label" xml:space="preserve">
    <value>Tabellenname</value>
  </data>
  <data name="tableIn_take_help" xml:space="preserve">
    <value>This is an integer for the number of records. You may receive fewer records than this value based on the contents of the table and the applied filter.This setting is not applicable to a C# function.</value>
  </data>
  <data name="tableIn_take_label" xml:space="preserve">
    <value>Maximum number of records to read (optional)</value>
  </data>
  <data name="tableout_displayName" xml:space="preserve">
    <value>Azure Storage Table</value>
  </data>
  <data name="tableout_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="tableout_name_label" xml:space="preserve">
    <value>Table parameter name</value>
  </data>
  <data name="table_tableName_errorText" xml:space="preserve">
    <value>Your table name must be an alphanumeric string of 3 to 63 characters. It can’t start with a number.</value>
  </data>
  <data name="table_tableName_help" xml:space="preserve">
    <value>This is the name of the table within your storage account to which the data will be written.</value>
  </data>
  <data name="table_tableName_label" xml:space="preserve">
    <value>Tabellenname</value>
  </data>
  <data name="BlobTriggerBatch_description" xml:space="preserve">
    <value>A Batch function that will be run whenever a blob is added to a specified container</value>
  </data>
  <data name="BlobTriggerCSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever a blob is added to a specified container</value>
  </data>
  <data name="BlobTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever a blob is added to a specified container</value>
  </data>
  <data name="CSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever it receives a GitHub webhook request</value>
  </data>
  <data name="EmptyBash_description" xml:space="preserve">
    <value>An empty Bash function without triggers, inputs, or outputs</value>
  </data>
  <data name="EmptyBatch_description" xml:space="preserve">
    <value>An empty Batch function without triggers, inputs, or outputs</value>
  </data>
  <data name="EmptyCSharp_description" xml:space="preserve">
    <value>An empty C# function without triggers, inputs, or outputs</value>
  </data>
  <data name="EmptyFSharp_description" xml:space="preserve">
    <value>An empty F# function without triggers, inputs, or outputs</value>
  </data>
  <data name="EmptyNodeJS_description" xml:space="preserve">
    <value>An empty Node.js function without triggers, inputs, or outputs</value>
  </data>
  <data name="EmptyPHP_description" xml:space="preserve">
    <value>An empty PHP function without triggers, inputs, or outputs</value>
  </data>
  <data name="EmptyPowerShell_description" xml:space="preserve">
    <value>An empty PowerShell function without triggers, inputs, or outputs</value>
  </data>
  <data name="EmptyPython_description" xml:space="preserve">
    <value>An empty Python function without triggers, inputs, or outputs</value>
  </data>
  <data name="EventHubTriggerCSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever an event hub receives a new event</value>
  </data>
  <data name="EventHubTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever an event hub receives a new event</value>
  </data>
  <data name="EventHubTriggerPython_description" xml:space="preserve">
    <value>A Python function that will be run whenever an event hub receives a new event</value>
  </data>
  <data name="FaceLocatorCSharp_description" xml:space="preserve">
    <value>A C# function that extracts dimensions (surrounding rectangle) of faces in a blob (image) in a container &amp; stores it in an Azure storage table</value>
  </data>
  <data name="FaceLocatorNodeJS_description" xml:space="preserve">
    <value>A Node.js function that extracts dimensions (surrounding rectangle) of faces in a blob (image) in a container &amp; stores it in an Azure storage table</value>
  </data>
  <data name="GenericWebhookCSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever it receives a webhook request</value>
  </data>
  <data name="GenericWebhookNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever it receives a webhook request</value>
  </data>
  <data name="GitHubCommenterNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever it receives a GitHub webhook request</value>
  </data>
  <data name="GithubWebhookCSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever it receives a GitHub webhook request</value>
  </data>
  <data name="GithubWebhookNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever it receives a GitHub webhook request</value>
  </data>
  <data name="HttpGETCRUDC_description" xml:space="preserve">
    <value>A C# function that fetches entities from a Storage Table when it receives an HTTP request</value>
  </data>
  <data name="HttpGETCRUDNodeJS_description" xml:space="preserve">
    <value>A Node.js function that fetches entities from a Storage Table when it receives an HTTP request</value>
  </data>
  <data name="HttpGETCRUDPHP_description" xml:space="preserve">
    <value>A PHP function that fetches entities from a Storage Table when it receives an HTTP request</value>
  </data>
  <data name="HttpPOSTCRUDCSharp_description" xml:space="preserve">
    <value>A C# function that adds entities to a Storage Table when it receives an HTTP request</value>
  </data>
  <data name="HttpPOSTCRUDNodeJS_description" xml:space="preserve">
    <value>A Node.js function that adds entities to a Storage Table when it receives an HTTP request</value>
  </data>
  <data name="HttpPUTCRUDC_description" xml:space="preserve">
    <value>A C# function that updates entitiy in a Storage Table when it receives an HTTP request</value>
  </data>
  <data name="HttpTriggerBatch_description" xml:space="preserve">
    <value>A batch function that will be run whenever it receives an HTTP request</value>
  </data>
  <data name="HttpTriggerCSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever it receives an HTTP request</value>
  </data>
  <data name="HttpTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever it receives an HTTP request</value>
  </data>
  <data name="HttpTriggerPowerShell_description" xml:space="preserve">
    <value>A PowerShell function that will be run whenever it receives an HTTP request</value>
  </data>
  <data name="ImageResizerCSharp_description" xml:space="preserve">
    <value>A C# function that creates resized images whenever a blob is added to a specified container</value>
  </data>
  <data name="ManualTriggerCSharp_description" xml:space="preserve">
    <value>A C# function that is triggered manually via the portal "Run" button</value>
  </data>
  <data name="ManualTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that is triggered manually via the portal "Run" button</value>
  </data>
  <data name="QueueTriggerBash_description" xml:space="preserve">
    <value>A bash function that will be run whenever a message is added to a specified Azure Storage queue</value>
  </data>
  <data name="QueueTriggerBatch_description" xml:space="preserve">
    <value>A batch function that will be run whenever a message is added to a specified Azure Storage queue</value>
  </data>
  <data name="QueueTriggerCSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever a message is added to a specified Azure Storage queue</value>
  </data>
  <data name="QueueTriggerFSharp_description" xml:space="preserve">
    <value>An F# function that will be run whenever a message is added to a specified Azure Storage queue</value>
  </data>
  <data name="QueueTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever a message is added to a specified Azure Storage queue</value>
  </data>
  <data name="QueueTriggerPHP_description" xml:space="preserve">
    <value>A PHP function that will be run whenever a message is added to a specified Azure Storage queue</value>
  </data>
  <data name="QueueTriggerPowerShell_description" xml:space="preserve">
    <value>A PowerShell function that will be run whenever a message is added to a specified Azure Storage queue</value>
  </data>
  <data name="QueueTriggerPython_description" xml:space="preserve">
    <value>A Python function that will be run whenever a message is added to a specified Azure Storage queue</value>
  </data>
  <data name="SaasFileTriggerBatch_description" xml:space="preserve">
    <value>A Batch function that will be run whenever a file is added to a SaaS provider.</value>
  </data>
  <data name="SaasFileTriggerCSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever a file is added to a SaaS provider.</value>
  </data>
  <data name="SaasFileTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever a file is added to a SaaS provider.</value>
  </data>
  <data name="SaasTableCSharp_description" xml:space="preserve">
    <value>A C# function that fetches entities from a SaaS Table when it receives an HTTP request.</value>
  </data>
  <data name="SendGridCSharp_description" xml:space="preserve">
    <value>A C# function that sends a SendGrid confirmation mail whenever a new order is added to a specified Azure Storage queue</value>
  </data>
  <data name="SendGridNodeJS_description" xml:space="preserve">
    <value>A Node.js function that sends a SendGrid confirmation mail whenever a new order is added to a specified Azure Storage queue</value>
  </data>
  <data name="ServiceBusQueueTriggerCSharp_description" xml:space="preserve">
    <value>A C# function that will be run whenever a message is added to a specified Service Bus queue</value>
  </data>
  <data name="ServiceBusQueueTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever a message is added to a specified Service Bus queue</value>
  </data>
  <data name="ServiceBusTopicTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run whenever a message is added to the specified Service Bus topic</value>
  </data>
  <data name="TimerTriggerCSharp_description" xml:space="preserve">
    <value>A C# function that will be run on a specified schedule</value>
  </data>
  <data name="TimerTriggerNodeJS_description" xml:space="preserve">
    <value>A Node.js function that will be run on a specified schedule</value>
  </data>
  <data name="TimerTriggerPowerShell_description" xml:space="preserve">
    <value>A PowerShell function that will be run on a specified schedule</value>
  </data>
  <data name="timerTrigger_schedule_errorText" xml:space="preserve">
    <value>Invalid Cron Expression. Please consult the &lt;a target='_blank' href='https://azure.microsoft.com/en-us/documentation/articles/functions-bindings-timer/'&gt;documentation&lt;/a&gt; to learn more.</value>
  </data>
  <data name="eventHubTrigger_consumerGroup_errorText" xml:space="preserve">
    <value>Your consumer group name must start and end with a letter or number, and it can contain only lowercase letters, numbers, the hyphen, the period, and the underscore. The $Default group is also allowed.</value>
  </data>
</root>