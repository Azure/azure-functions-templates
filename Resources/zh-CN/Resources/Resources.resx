<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="eventHubOut_connection_help" xml:space="preserve">
    <value>这是你的事件中心的连接字符串。请确保它具有发送权限。</value>
  </data>
  <data name="eventHubOut_connection_label" xml:space="preserve">
    <value>事件中心连接</value>
  </data>
  <data name="eventHubOut_displayName" xml:space="preserve">
    <value>Azure 事件中心</value>
  </data>
  <data name="eventHubOut_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="eventHubOut_name_label" xml:space="preserve">
    <value>事件参数名称</value>
  </data>
  <data name="eventHubOut_path_errorText" xml:space="preserve">
    <value>事件中心名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字、句点、连字符和下划线。</value>
  </data>
  <data name="eventHubOut_path_help" xml:space="preserve">
    <value>这是将接收事件的事件中心的名称。</value>
  </data>
  <data name="eventHubOut_path_label" xml:space="preserve">
    <value>事件中心名称</value>
  </data>
  <data name="eventHubTrigger_connection_help" xml:space="preserve">
    <value>这是事件中心的连接字符串。请确保它具有接收权限。</value>
  </data>
  <data name="eventHubTrigger_connection_label" xml:space="preserve">
    <value>事件中心连接</value>
  </data>
  <data name="eventHubTrigger_consumerGroup_help" xml:space="preserve">
    <value>从其接收事件的事件中心使用者组的名称。</value>
  </data>
  <data name="eventHubTrigger_consumerGroup_label" xml:space="preserve">
    <value>事件中心使用者组</value>
  </data>
  <data name="eventHubTrigger_displayName" xml:space="preserve">
    <value>Azure 事件中心</value>
  </data>
  <data name="eventHubTrigger_name_help" xml:space="preserve">
    <value>这是代码中用于触发器绑定到的参数的名称。</value>
  </data>
  <data name="eventHubTrigger_name_label" xml:space="preserve">
    <value>事件参数名称</value>
  </data>
  <data name="eventHubTrigger_path_errorText" xml:space="preserve">
    <value>事件中心名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字、连字符、句点和下划线。</value>
  </data>
  <data name="eventHubTrigger_path_help" xml:space="preserve">
    <value>这是你想要触发的事件中心的名称。</value>
  </data>
  <data name="eventHubTrigger_path_label" xml:space="preserve">
    <value>事件中心名称</value>
  </data>
  <data name="queueOut_displayName" xml:space="preserve">
    <value>Azure 存储队列</value>
  </data>
  <data name="queueOut_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="queueOut_name_label" xml:space="preserve">
    <value>消息参数名称</value>
  </data>
  <data name="queueOut_queueName_errorText" xml:space="preserve">
    <value>队列名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字和连字符。名称长度必须为 3 到 63 个字符。</value>
  </data>
  <data name="queueOut_queueName_label" xml:space="preserve">
    <value>队列名称</value>
  </data>
  <data name="queueOut_queueName_help" xml:space="preserve">
    <value>这是将向其发送消息的队列。如果队列尚不存在，将会在指定的存储帐户中为你创建一个队列。</value>
  </data>
  <data name="temp_category_core" xml:space="preserve">
    <value>核心</value>
  </data>
  <data name="temp_category_dataProcessing" xml:space="preserve">
    <value>数据处理</value>
  </data>
  <data name="temp_timerTrigger_CSharp_desc" xml:space="preserve">
    <value>将按指定计划运行的 C# 函数</value>
  </data>
  <data name="temp_timerTrigger_CSharp_name" xml:space="preserve">
    <value>TimerTrigger - C#</value>
  </data>
  <data name="timerTrigger_displayName" xml:space="preserve">
    <value>计时器</value>
  </data>
  <data name="timerTrigger_name_help" xml:space="preserve">
    <value>这是代码中用于触发器绑定到的参数的名称。</value>
  </data>
  <data name="timerTrigger_name_label" xml:space="preserve">
    <value>时间戳参数名称</value>
  </data>
  <data name="timerTrigger_schedule_help" xml:space="preserve">
    <value>输入格式为 "{second} {minute} {hour} {day} {month} {day of week}" 的 cron 表达式来指定你的计划。请查阅文档了解详细信息。</value>
  </data>
  <data name="timerTrigger_schedule_label" xml:space="preserve">
    <value>计划</value>
  </data>
  <data name="variables_apiHubTableConnectionHelp" xml:space="preserve">
    <value>SaaS 表连接的连接字符串。</value>
  </data>
  <data name="variables_apiHubTableConnectionLabel" xml:space="preserve">
    <value>SaaS 表连接</value>
  </data>
  <data name="variables_apiHubTableDataSetHelp" xml:space="preserve">
    <value>要绑定到的数据集的名称。如果绑定到表或实体，请保留为默认。</value>
  </data>
  <data name="variables_apiHubTableDataSetLabel" xml:space="preserve">
    <value>数据集名称</value>
  </data>
  <data name="variables_apiHubTableEntityHelp" xml:space="preserve">
    <value>要绑定到的实体的 ID 。如果绑定到数据集或表，请留空。</value>
  </data>
  <data name="variables_apiHubTableEntityLabel" xml:space="preserve">
    <value>实体 ID</value>
  </data>
  <data name="variables_apiHubTableHelp" xml:space="preserve">
    <value>要绑定到的表的名称。如果绑定到数据集或实体，请留空。</value>
  </data>
  <data name="variables_apiHubTableNameLabel" xml:space="preserve">
    <value>表名称</value>
  </data>
  <data name="variables_appSettingsHelp" xml:space="preserve">
    <value>这是存储帐户的连接字符串。</value>
  </data>
  <data name="variables_parameterName" xml:space="preserve">
    <value>参数名称必须为包含任意字符数的字母数字字符串。不能以数字开头。</value>
  </data>
  <data name="variables_paramNameInputHelp" xml:space="preserve">
    <value>这是代码中用于输入绑定绑定到的参数的名称。</value>
  </data>
  <data name="variables_paramNameOutputHelp" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="variables_selectConnection" xml:space="preserve">
    <value>单击“选择”以选择连接</value>
  </data>
  <data name="variables_storageConnStringLabel" xml:space="preserve">
    <value>存储帐户连接</value>
  </data>
  <data name="variables_paramNameLabel" xml:space="preserve">
    <value>参数名称</value>
  </data>
  <data name="temp_category_all" xml:space="preserve">
    <value>全部</value>
  </data>
  <data name="temp_category_api" xml:space="preserve">
    <value>API 和 Webhook</value>
  </data>
  <data name="temp_category_experimental" xml:space="preserve">
    <value>实验性</value>
  </data>
  <data name="temp_category_samples" xml:space="preserve">
    <value>示例</value>
  </data>
  <data name="blobOut_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="blobOut_name_label" xml:space="preserve">
    <value>Blob 参数名称</value>
  </data>
  <data name="queueTrigger_queueName_help" xml:space="preserve">
    <value>这是从中读取消息的队列的名称。</value>
  </data>
  <data name="queueTrigger_name_label" xml:space="preserve">
    <value>消息参数名称</value>
  </data>
  <data name="queueTrigger_queueName_errorText" xml:space="preserve">
    <value>队列名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字和连字符。名称长度必须为 3 到 63 个字符。</value>
  </data>
  <data name="queueTrigger_name_help" xml:space="preserve">
    <value>这是代码中用于触发器绑定到的参数的名称。</value>
  </data>
  <data name="queueTrigger_queueName_label" xml:space="preserve">
    <value>队列名称</value>
  </data>
  <data name="blobOut_path_help" xml:space="preserve">
    <value>这是将写入 blob 的存储帐户中的路径。</value>
  </data>
  <data name="blobOut_path_errorTex" xml:space="preserve">
    <value>你的 blob 路径必须是包含 3 到 63 个字符的容器名称，且后跟一个包含 1 到 1,024 个字符的 blob 名称。该 blob 名称可以是任何字符组合且最多可包含 254 个用正斜杠(/)分隔的路径段。</value>
  </data>
  <data name="blobOut_path_label" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="blobIn_name_help" xml:space="preserve">
    <value>这是代码中用于输入绑定绑定到的参数的名称。</value>
  </data>
  <data name="blobIn_name_label" xml:space="preserve">
    <value>Blob 参数名称</value>
  </data>
  <data name="blobIn_path_help" xml:space="preserve">
    <value>这是将从中读取 blob 的存储帐户中的路径。</value>
  </data>
  <data name="blobIn_path_label" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="blobIn_patherrorText" xml:space="preserve">
    <value>你的 blob 路径必须是包含 3 到 63 个字符的容器名称，且后跟一个包含 1 到 1,024 个字符的 blob 名称。该 blob 名称可以是任何字符组合且最多可包含 254 个用正斜杠(/)分隔的路径段。</value>
  </data>
  <data name="blobTrigger_name_label" xml:space="preserve">
    <value>Blob 参数名称</value>
  </data>
  <data name="blobTrigger_name_help" xml:space="preserve">
    <value>这是代码中用于触发器绑定到的参数的名称。</value>
  </data>
  <data name="blobTrigger_path_label" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="blobTrigger_path_help" xml:space="preserve">
    <value>这是触发器将会监视的存储帐户中的路径。</value>
  </data>
  <data name="blobTrigger_path_errorTex" xml:space="preserve">
    <value>你的 blob 路径必须是包含 3 到 63 个字符的容器名称，且后跟一个包含 1 到 1,024 个字符的 blob 名称。该 blob 名称可以是任何字符组合且最多可包含 254 个用正斜杠(/)分隔的路径段。</value>
  </data>
  <data name="apiHubFileIn_name_label" xml:space="preserve">
    <value>文件参数名称</value>
  </data>
  <data name="apiHubFileIn_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="apiHubFileIn_path_label" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="apiHubFileIn_path_help" xml:space="preserve">
    <value>输入文件路径</value>
  </data>
  <data name="apiHubFileIn_connection_label" xml:space="preserve">
    <value>SaaS 文件连接</value>
  </data>
  <data name="apiHubFileIn_connection_help" xml:space="preserve">
    <value>SaaS 文件连接的连接字符串。</value>
  </data>
  <data name="apiHubFileTrigger_name_label" xml:space="preserve">
    <value>文件参数名称</value>
  </data>
  <data name="apiHubFileTrigger_name_help" xml:space="preserve">
    <value>这是代码中用于触发器绑定到的参数的名称。</value>
  </data>
  <data name="apiHubFileTrigger_path_label" xml:space="preserve">
    <value>路径</value>
  </data>
  <data name="apiHubFileTrigger_path_help" xml:space="preserve">
    <value>要在其中触发的路径。此路径必须存在。</value>
  </data>
  <data name="apiHubFileTrigger_connection_label" xml:space="preserve">
    <value>SaaS 文件连接</value>
  </data>
  <data name="apiHubFileTrigger_connection_help" xml:space="preserve">
    <value>SaaS 文件连接的连接字符串。</value>
  </data>
  <data name="apiHubTableIn_displayName" xml:space="preserve">
    <value>SaaS 表</value>
  </data>
  <data name="apiHubTableOut_displayName" xml:space="preserve">
    <value>SaaS 表</value>
  </data>
  <data name="httpTrigger_displayName" xml:space="preserve">
    <value>HTTP</value>
  </data>
  <data name="httpTrigger_name_label" xml:space="preserve">
    <value>请求参数名称</value>
  </data>
  <data name="httpTrigger_name_help" xml:space="preserve">
    <value>这是代码中用于触发器绑定到的参数的名称。</value>
  </data>
  <data name="httpTrigger_webHookType_label" xml:space="preserve">
    <value>Webhook 类型</value>
  </data>
  <data name="httpTrigger_webHookType_help" xml:space="preserve">
    <value>Webhook 使服务可以轻易地相互调用。</value>
  </data>
  <data name="httpTrigger_authLevel_label" xml:space="preserve">
    <value>身份验证级别</value>
  </data>
  <data name="httpTrigger_mode_label" xml:space="preserve">
    <value>模式</value>
  </data>
  <data name="httpTrigger_mode_help" xml:space="preserve">
    <value>这是触发器的模式。“标准”是指请求将为无任何其他语义的标准 HTTP。"Webhook" 指请求将根据指定的 Webhook 类型进行处理。</value>
  </data>
  <data name="apiHubFileIn_displayName" xml:space="preserve">
    <value>SaaS 文件</value>
  </data>
  <data name="apiHubFileTrigger_displayName" xml:space="preserve">
    <value>SaaS 文件触发器</value>
  </data>
  <data name="blobIn_displayName" xml:space="preserve">
    <value>Azure 存储 Blob</value>
  </data>
  <data name="blobOut_displayName" xml:space="preserve">
    <value>Azure 存储 Blob</value>
  </data>
  <data name="blobTrigger_displayName" xml:space="preserve">
    <value>Azure 存储 Blob</value>
  </data>
  <data name="documentDBIn_collectionName_help" xml:space="preserve">
    <value>这是将从中读取数据的数据库的内部集合的名称。</value>
  </data>
  <data name="documentDBIn_collectionName_label" xml:space="preserve">
    <value>集合名称</value>
  </data>
  <data name="documentDBIn_connection_help" xml:space="preserve">
    <value>这是你的 DocumentDB 帐户的连接字符串。</value>
  </data>
  <data name="documentDBIn_connection_label" xml:space="preserve">
    <value>DocumentDB 帐户连接</value>
  </data>
  <data name="documentDBIn_databaseName_help" xml:space="preserve">
    <value>这是将从中读取数据的 DocumentDB 帐户的内部数据库的名称。</value>
  </data>
  <data name="documentDBIn_databaseName_label" xml:space="preserve">
    <value>数据库名称</value>
  </data>
  <data name="documentDBIn_displayName" xml:space="preserve">
    <value>Azure DocumentDB 文档</value>
  </data>
  <data name="documentDBIn_id_help" xml:space="preserve">
    <value>这是将被读取的文档的 ID。</value>
  </data>
  <data name="documentDBIn_id_label" xml:space="preserve">
    <value>文档 ID</value>
  </data>
  <data name="documentDBIn_name_help" xml:space="preserve">
    <value>这是代码中用于输入绑定绑定到的参数的名称。</value>
  </data>
  <data name="documentDBIn_name_label" xml:space="preserve">
    <value>文档参数名称</value>
  </data>
  <data name="documentDBOut_collectionName_help" xml:space="preserve">
    <value>这是将写入数据的数据库的内部集合的名称。</value>
  </data>
  <data name="documentDBOut_collectionName_label" xml:space="preserve">
    <value>集合名称</value>
  </data>
  <data name="documentDBOut_connection_help" xml:space="preserve">
    <value>这是你的 DocumentDB 帐户的连接字符串。</value>
  </data>
  <data name="documentDBOut_connection_label" xml:space="preserve">
    <value>DocumentDB 帐户连接</value>
  </data>
  <data name="documentDBOut_createIfNotExists_help" xml:space="preserve">
    <value>如果为 true，你的数据库和集合将会自动创建。</value>
  </data>
  <data name="documentDBOut_createIfNotExists_label" xml:space="preserve">
    <value>是否希望为你创建 DocumentDB 数据库和集合?</value>
  </data>
  <data name="documentDBOut_databaseName_help" xml:space="preserve">
    <value>这是将写入数据的 DocumentDB 帐户的内部数据库的名称。</value>
  </data>
  <data name="documentDBOut_databaseName_label" xml:space="preserve">
    <value>数据库名称</value>
  </data>
  <data name="documentDBOut_displayName" xml:space="preserve">
    <value>Azure DocumentDB 文档</value>
  </data>
  <data name="documentDBOut_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="documentDBOut_name_label" xml:space="preserve">
    <value>文档参数名称</value>
  </data>
  <data name="httpOut_displayName" xml:space="preserve">
    <value>HTTP</value>
  </data>
  <data name="httpOut_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="httpOut_name_label" xml:space="preserve">
    <value>响应参数名称</value>
  </data>
  <data name="httpTrigger_authLevel_help" xml:space="preserve">
    <value>授权级别控制你是否正在使用 API 密钥和使用哪一个密钥；函数使用函数密钥；管理员使用主密钥。函数密钥和主密钥位于主机密码文件。对于基于用户的身份验证，请转到 Function App 设置。</value>
  </data>
  <data name="manualTrigger_name_help" xml:space="preserve">
    <value>这是代码中用于触发器绑定到的参数的名称。</value>
  </data>
  <data name="manualTrigger_name_label" xml:space="preserve">
    <value>参数名称</value>
  </data>
  <data name="mobileTableIn_apiKey_help" xml:space="preserve">
    <value>这是指定移动应用的 API 密钥的应用设置名称。&lt;a target='_blank' href='http:go.microsoft.com/fwlink/?LinkId=780568'&gt;详细信息&lt;/a&gt;。</value>
  </data>
  <data name="mobileTableIn_apiKey_label" xml:space="preserve">
    <value>API 密钥查找(可选)</value>
  </data>
  <data name="mobileTableIn_connection_help" xml:space="preserve">
    <value>这是指定移动应用的 URL 的应用设置名称。</value>
  </data>
  <data name="mobileTableIn_connection_label" xml:space="preserve">
    <value>移动应用 URL 查找</value>
  </data>
  <data name="mobileTableIn_displayName" xml:space="preserve">
    <value>Azure 移动表记录</value>
  </data>
  <data name="mobileTableIn_id_help" xml:space="preserve">
    <value>这是要检索的记录的 ID。</value>
  </data>
  <data name="mobileTableIn_id_label" xml:space="preserve">
    <value>记录 ID</value>
  </data>
  <data name="mobileTableIn_name_help" xml:space="preserve">
    <value>这是代码中用于输入绑定绑定到的参数的名称。</value>
  </data>
  <data name="mobileTableIn_name_label" xml:space="preserve">
    <value>记录参数名称</value>
  </data>
  <data name="mobileTableIn_tableName_help" xml:space="preserve">
    <value>这是将从中读取数据的移动应用的内部表的名称。</value>
  </data>
  <data name="mobileTableIn_tableName_label" xml:space="preserve">
    <value>表单名称</value>
  </data>
  <data name="mobileTableOut_apiKey_help" xml:space="preserve">
    <value>这是指定移动应用的 API 密钥的应用设置名称。&lt;a target='_blank' href='http:go.microsoft.com/fwlink/?LinkId=780568'&gt;详细信息&lt;/a&gt;。</value>
  </data>
  <data name="mobileTableOut_apiKey_label" xml:space="preserve">
    <value>API 密钥查找(可选)</value>
  </data>
  <data name="mobileTableOut_connection_help" xml:space="preserve">
    <value>这是指定移动应用的 URL 的应用设置名称。</value>
  </data>
  <data name="mobileTableOut_connection_label" xml:space="preserve">
    <value>移动应用 URL 查找</value>
  </data>
  <data name="mobileTableOut_displayName" xml:space="preserve">
    <value>Azure 移动表记录</value>
  </data>
  <data name="mobileTableOut_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="mobileTableOut_name_label" xml:space="preserve">
    <value>记录参数名称</value>
  </data>
  <data name="mobileTableOut_tableName_help" xml:space="preserve">
    <value>这是将向其中写入数据的移动应用的内部表的名称。</value>
  </data>
  <data name="mobileTableOut_tableName_label" xml:space="preserve">
    <value>表单名称</value>
  </data>
  <data name="notificationHubOut_connection_help" xml:space="preserve">
    <value>这是你的通知中心命名空间的连接字符串。</value>
  </data>
  <data name="notificationHubOut_connection_label" xml:space="preserve">
    <value>通知中心命名空间连接</value>
  </data>
  <data name="notificationHubOut_displayName" xml:space="preserve">
    <value>Azure 通知中心</value>
  </data>
  <data name="notificationHubOut_hubName_help" xml:space="preserve">
    <value>这是将用于发送推送通知的通知中心的名称。</value>
  </data>
  <data name="notificationHubOut_hubName_label" xml:space="preserve">
    <value>通知中心名称</value>
  </data>
  <data name="notificationHubOut_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="notificationHubOut_name_label" xml:space="preserve">
    <value>通知参数名称</value>
  </data>
  <data name="notificationHubOut_platform_help" xml:space="preserve">
    <value>选择“平台”可发送本机通知。选择“模板”可发送模板通知。</value>
  </data>
  <data name="notificationHubOut_platform_label" xml:space="preserve">
    <value>通知平台</value>
  </data>
  <data name="notificationHubOut_tagExpression_help" xml:space="preserve">
    <value>标记表达式使你在通过通知中心发送推送通知时可以将特定的成套设备/注册作为目标。将其留空可向所有注册的设备发送广播 &lt;a target='_blank' href='http:go.microsoft.com/fwlink/?LinkId=785094'&gt;详细信息&lt;/a&gt;。</value>
  </data>
  <data name="notificationHubOut_tagExpression_label" xml:space="preserve">
    <value>标记表达式(可选)</value>
  </data>
  <data name="queueTrigger_displayName" xml:space="preserve">
    <value>Azure 存储队列</value>
  </data>
  <data name="sendGrid_displayName" xml:space="preserve">
    <value>SendGrid</value>
  </data>
  <data name="sendGrid_from_help" xml:space="preserve">
    <value>这是发送邮件的电子邮件地址。格式可以为 "user@host.com" 或“显示名称 &lt;user@host.com&gt;”。如果未在此处指定值，则可在代码中指定。</value>
  </data>
  <data name="sendGrid_from_label" xml:space="preserve">
    <value>发件人地址</value>
  </data>
  <data name="sendGrid_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="sendGrid_name_label" xml:space="preserve">
    <value>消息参数名称</value>
  </data>
  <data name="sendGrid_subject_help" xml:space="preserve">
    <value>这是用于邮件的主题行。如果未在此处指定值，则可在代码中指定。</value>
  </data>
  <data name="sendGrid_subject_label" xml:space="preserve">
    <value>邮件主题</value>
  </data>
  <data name="sendGrid_text_help" xml:space="preserve">
    <value>这是用于邮件的文本正文。如果未在此处指定值，则可在代码中指定。</value>
  </data>
  <data name="sendGrid_text_label" xml:space="preserve">
    <value>邮件文本</value>
  </data>
  <data name="sendGrid_to_help" xml:space="preserve">
    <value>这是接收邮件的电子邮件地址。格式可以为 "user@host.com" 或“显示名称 &lt;user@host.com&gt;”。如果未在此处指定值，则可在代码中指定。</value>
  </data>
  <data name="sendGrid_to_label" xml:space="preserve">
    <value>收件地址</value>
  </data>
  <data name="serviceBusOut_accessRights_help" xml:space="preserve">
    <value>这是客户端对队列或主题订阅所具有的访问权限。</value>
  </data>
  <data name="serviceBusOut_accessRights_label" xml:space="preserve">
    <value>AccessRights</value>
  </data>
  <data name="serviceBusOut_connection_help" xml:space="preserve">
    <value>这是你的服务总线的连接字符串。请确保它具有发送权限。</value>
  </data>
  <data name="serviceBusOut_connection_label" xml:space="preserve">
    <value>服务总线连接</value>
  </data>
  <data name="serviceBusOut_displayName" xml:space="preserve">
    <value>Azure 服务总线</value>
  </data>
  <data name="serviceBusOut_messageType_help" xml:space="preserve">
    <value>这是服务总线消息类型。这使你可以在使用队列或使用主题之间进行选择。</value>
  </data>
  <data name="serviceBusOut_messageType_label" xml:space="preserve">
    <value>消息类型</value>
  </data>
  <data name="serviceBusOut_messageType_queueName" xml:space="preserve">
    <value>服务总线队列</value>
  </data>
  <data name="serviceBusOut_messageType_topicName" xml:space="preserve">
    <value>服务总线主题</value>
  </data>
  <data name="serviceBusOut_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="serviceBusOut_name_label" xml:space="preserve">
    <value>消息参数名称</value>
  </data>
  <data name="serviceBusOut_queueName_errorText" xml:space="preserve">
    <value>队列名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字、句点和连字符。名称长度必须为 3 到 63 个字符。</value>
  </data>
  <data name="serviceBusOut_queueName_help" xml:space="preserve">
    <value>这是将向其发送消息的队列。</value>
  </data>
  <data name="serviceBusOut_queueName_label" xml:space="preserve">
    <value>队列名称</value>
  </data>
  <data name="serviceBusOut_topicName_errorText" xml:space="preserve">
    <value>主题名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字、句点和连字符。名称长度必须为 3 到 63 个字符。</value>
  </data>
  <data name="serviceBusOut_topicName_help" xml:space="preserve">
    <value>这是将向其发送消息的主题。</value>
  </data>
  <data name="serviceBusOut_topicName_label" xml:space="preserve">
    <value>主题名称</value>
  </data>
  <data name="serviceBusTrigger_accessRights_help" xml:space="preserve">
    <value>这是客户端对队列或主题订阅所具有的访问权限。</value>
  </data>
  <data name="serviceBusTrigger_accessRights_label" xml:space="preserve">
    <value>AccessRights</value>
  </data>
  <data name="serviceBusTrigger_connection_help" xml:space="preserve">
    <value>这是你的服务总线的连接字符串。请确保它具有侦听权限。</value>
  </data>
  <data name="serviceBusTrigger_connection_label" xml:space="preserve">
    <value>服务总线连接</value>
  </data>
  <data name="serviceBusTrigger_displayName" xml:space="preserve">
    <value>Azure 服务总线</value>
  </data>
  <data name="serviceBusTrigger_messageType_help" xml:space="preserve">
    <value>这是服务总线消息类型。这使你可以在使用队列或使用主题之间进行选择。</value>
  </data>
  <data name="serviceBusTrigger_messageType_label" xml:space="preserve">
    <value>消息类型</value>
  </data>
  <data name="serviceBusTrigger_messageType_queueName" xml:space="preserve">
    <value>服务总线队列</value>
  </data>
  <data name="serviceBusTrigger_messageType_topicName" xml:space="preserve">
    <value>服务总线主题</value>
  </data>
  <data name="serviceBusTrigger_name_help" xml:space="preserve">
    <value>这是代码中用于触发器绑定到的参数的名称。</value>
  </data>
  <data name="serviceBusTrigger_name_label" xml:space="preserve">
    <value>消息参数名称</value>
  </data>
  <data name="serviceBusTrigger_queueName_errorText" xml:space="preserve">
    <value>队列名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字、句点和连字符。名称长度必须为 3 到 63 个字符。</value>
  </data>
  <data name="serviceBusTrigger_queueName_help" xml:space="preserve">
    <value>这是从中读取消息的队列的名称。</value>
  </data>
  <data name="serviceBusTrigger_queueName_label" xml:space="preserve">
    <value>队列名称</value>
  </data>
  <data name="serviceBusTrigger_subscriptionName_errorText" xml:space="preserve">
    <value>订阅名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字、句点和连字符。名称长度必须为 3 到 63 个字符。</value>
  </data>
  <data name="serviceBusTrigger_subscriptionName_help" xml:space="preserve">
    <value>这是要绑定到的主题的内部订阅的名称。</value>
  </data>
  <data name="serviceBusTrigger_subscriptionName_label" xml:space="preserve">
    <value>订阅名</value>
  </data>
  <data name="serviceBusTrigger_topicName_errorText" xml:space="preserve">
    <value>主题名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字、句点和连字符。名称长度必须为 3 到 63 个字符。</value>
  </data>
  <data name="serviceBusTrigger_topicName_help" xml:space="preserve">
    <value>这是将从中读取消息的主题的名称。</value>
  </data>
  <data name="serviceBusTrigger_topicName_label" xml:space="preserve">
    <value>主题名称</value>
  </data>
  <data name="tableIn_displayName" xml:space="preserve">
    <value>Azure 存储表</value>
  </data>
  <data name="tableIn_filter_help" xml:space="preserve">
    <value>这是用于筛选表查询结果的可选查询表达式。此设置不适用于 C# 函数。</value>
  </data>
  <data name="tableIn_filter_label" xml:space="preserve">
    <value>查询筛选器(可选)</value>
  </data>
  <data name="tableIn_name_help" xml:space="preserve">
    <value>这是代码中用于输入绑定绑定到的参数的名称。</value>
  </data>
  <data name="tableIn_name_label" xml:space="preserve">
    <value>表参数名称</value>
  </data>
  <data name="tableIn_partitionKey_help" xml:space="preserve">
    <value>这是表分区键列的值。将会返回具有匹配的分区键和行键的记录。必须使用分区键设置配置行键设置。</value>
  </data>
  <data name="tableIn_partitionKey_label" xml:space="preserve">
    <value>分区键(可选)</value>
  </data>
  <data name="tableIn_rowKey_help" xml:space="preserve">
    <value>这是表行键列的值。将会返回具有匹配的行键和分区键的记录。必须使用行键设置配置分区键设置。</value>
  </data>
  <data name="tableIn_rowKey_label" xml:space="preserve">
    <value>行键(可选)</value>
  </data>
  <data name="tableIn_tableName_errorText" xml:space="preserve">
    <value>表名称必须为包含 3 到 63 个字符的字母数字字符串。不能以数字开头。</value>
  </data>
  <data name="tableIn_tableName_help" xml:space="preserve">
    <value>这是将从中读取数据的存储帐户的内部表的名称。</value>
  </data>
  <data name="tableIn_tableName_label" xml:space="preserve">
    <value>表单名称</value>
  </data>
  <data name="tableIn_take_help" xml:space="preserve">
    <value>这是记录数的整数值。基于表的内容和应用的筛选器，你可能收到比这个值更少的记录。此设置不适用于 C# 函数。</value>
  </data>
  <data name="tableIn_take_label" xml:space="preserve">
    <value>要读取的记录的最大数量(可选)</value>
  </data>
  <data name="tableout_displayName" xml:space="preserve">
    <value>Azure 存储表</value>
  </data>
  <data name="tableout_name_help" xml:space="preserve">
    <value>这是代码中用于输出绑定绑定到的参数的名称。</value>
  </data>
  <data name="tableout_name_label" xml:space="preserve">
    <value>表参数名称</value>
  </data>
  <data name="table_tableName_errorText" xml:space="preserve">
    <value>表名称必须为包含 3 到 63 个字符的字母数字字符串。不能以数字开头。</value>
  </data>
  <data name="table_tableName_help" xml:space="preserve">
    <value>这是将向其中写入数据的存储帐户的内部表的名称。</value>
  </data>
  <data name="table_tableName_label" xml:space="preserve">
    <value>表单名称</value>
  </data>
  <data name="BlobTriggerBatch_description" xml:space="preserve">
    <value>一个 Batch 函数，每当将 blob 添加到指定容器时它都会运行</value>
  </data>
  <data name="BlobTriggerCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当将 blob 添加到指定容器时它都会运行</value>
  </data>
  <data name="BlobTriggerNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当将 blob 添加到指定容器时它都会运行</value>
  </data>
  <data name="CSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当收到 GitHub Webhook 请求时它都会运行</value>
  </data>
  <data name="EmptyBash_description" xml:space="preserve">
    <value>一个空 Bash 函数，没有触发器、输入或输出</value>
  </data>
  <data name="EmptyBatch_description" xml:space="preserve">
    <value>一个空 Batch 函数，没有触发器、输入或输出</value>
  </data>
  <data name="EmptyCSharp_description" xml:space="preserve">
    <value>一个空 C# 函数，没有触发器、输入或输出</value>
  </data>
  <data name="EmptyFSharp_description" xml:space="preserve">
    <value>一个空 F# 函数，没有触发器、输入或输出</value>
  </data>
  <data name="EmptyNodeJS_description" xml:space="preserve">
    <value>一个空 Node.js 函数，没有触发器、输入或输出</value>
  </data>
  <data name="EmptyPHP_description" xml:space="preserve">
    <value>一个空 PHP 函数，没有触发器、输入或输出</value>
  </data>
  <data name="EmptyPowerShell_description" xml:space="preserve">
    <value>一个空 PowerShell 函数，没有触发器、输入或输出</value>
  </data>
  <data name="EmptyPython_description" xml:space="preserve">
    <value>一个空 Python 函数，没有触发器、输入或输出</value>
  </data>
  <data name="EventHubTriggerCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当事件中心收到一个新事件时它都会运行</value>
  </data>
  <data name="EventHubTriggerNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当事件中心收到一个新事件时它都会运行</value>
  </data>
  <data name="EventHubTriggerPython_description" xml:space="preserve">
    <value>一个 Python 函数，每当事件中心收到一个新事件时它都会运行</value>
  </data>
  <data name="FaceLocatorCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，用于在容器中提取 blob (映像)中的平面尺寸(周围边框)并将其存储在 Azure 存储表中</value>
  </data>
  <data name="FaceLocatorNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，用于在容器中提取 blob (映像)中的平面尺寸(周围边框)并将其存储在 Azure 存储表中</value>
  </data>
  <data name="GenericWebhookCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当收到 Webhook 请求时它都会运行</value>
  </data>
  <data name="GenericWebhookNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当收到 Webhook 请求时它都会运行</value>
  </data>
  <data name="GitHubCommenterNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当收到 GitHub Webhook 请求时它都会运行</value>
  </data>
  <data name="GithubWebhookCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当收到 GitHub Webhook 请求时它都会运行</value>
  </data>
  <data name="GithubWebhookNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当收到 GitHub Webhook 请求时它都会运行</value>
  </data>
  <data name="HttpGETCRUDC_description" xml:space="preserve">
    <value>一个 C# 函数，当它收到 HTTP 请求时会从存储表获取实体</value>
  </data>
  <data name="HttpGETCRUDNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，当它收到 HTTP 请求时会从存储表获取实体</value>
  </data>
  <data name="HttpGETCRUDPHP_description" xml:space="preserve">
    <value>A PHP function that fetches entities from a Storage Table when it receives an HTTP request</value>
  </data>
  <data name="HttpPOSTCRUDCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，当它收到 HTTP 请求时会向存储表添加实体</value>
  </data>
  <data name="HttpPOSTCRUDNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，当它收到 HTTP 请求时会向存储表添加实体</value>
  </data>
  <data name="HttpPUTCRUDC_description" xml:space="preserve">
    <value>一个 C# 函数，当它收到 HTTP 请求时会更新存储表中的实体</value>
  </data>
  <data name="HttpTriggerBatch_description" xml:space="preserve">
    <value>一个 batch 函数，每当它收到 HTTP 请求时都会运行</value>
  </data>
  <data name="HttpTriggerCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当它收到 HTTP 请求时都会运行</value>
  </data>
  <data name="HttpTriggerNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当它收到 HTTP 请求时都会运行</value>
  </data>
  <data name="HttpTriggerPowerShell_description" xml:space="preserve">
    <value>一个 PowerShell 函数，每当它收到 HTTP 请求时都会运行</value>
  </data>
  <data name="ImageResizerCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当将 blob 添加到指定容器时它都会创建已调整大小的映像</value>
  </data>
  <data name="ManualTriggerCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，通过门户“运行”按钮手动触发</value>
  </data>
  <data name="ManualTriggerNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，通过门户“运行”按钮手动触发</value>
  </data>
  <data name="QueueTriggerBash_description" xml:space="preserve">
    <value>一个 bash 函数，每当将消息添加到指定的 Azure 存储队列时它都会运行</value>
  </data>
  <data name="QueueTriggerBatch_description" xml:space="preserve">
    <value>一个 batch 函数，每当将消息添加到指定的 Azure 存储队列时它都会运行</value>
  </data>
  <data name="QueueTriggerCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当将消息添加到指定的 Azure 存储队列时它都会运行</value>
  </data>
  <data name="QueueTriggerFSharp_description" xml:space="preserve">
    <value>一个 F# 函数，每当将消息添加到指定的 Azure 存储队列时它都会运行</value>
  </data>
  <data name="QueueTriggerNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当将消息添加到指定的 Azure 存储队列时它都会运行</value>
  </data>
  <data name="QueueTriggerPHP_description" xml:space="preserve">
    <value>一个 PHP 函数，每当将消息添加到指定的 Azure 存储队列时它都会运行</value>
  </data>
  <data name="QueueTriggerPowerShell_description" xml:space="preserve">
    <value>一个 PowerShell 函数，每当将消息添加到指定的 Azure 存储队列时它都会运行</value>
  </data>
  <data name="QueueTriggerPython_description" xml:space="preserve">
    <value>一个 Python 函数，每当将消息添加到指定的 Azure 存储队列时它都会运行</value>
  </data>
  <data name="SaasFileTriggerBatch_description" xml:space="preserve">
    <value>一个 Batch 函数，每当将文件添加到 SaaS 提供程序时它都会运行。</value>
  </data>
  <data name="SaasFileTriggerCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当将文件添加到 SaaS 提供程序时它都会运行。</value>
  </data>
  <data name="SaasFileTriggerNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当将文件添加到 SaaS 提供程序时它都会运行。</value>
  </data>
  <data name="SaasTableCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当它收到 HTTP 请求时都将从 SaaS 表获取实体。</value>
  </data>
  <data name="SendGridCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当将新订单添加到指定的 Azure 存储队列时它都会发送 SendGrid 确认邮件。</value>
  </data>
  <data name="SendGridNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当将新订单添加到指定的 Azure 存储队列时它都会发送 SendGrid 确认邮件。</value>
  </data>
  <data name="ServiceBusQueueTriggerCSharp_description" xml:space="preserve">
    <value>一个 C# 函数，每当将消息添加到指定的服务总线队列时它都会运行</value>
  </data>
  <data name="ServiceBusQueueTriggerNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当将消息添加到指定的服务总线队列时它都会运行</value>
  </data>
  <data name="ServiceBusTopicTriggerNodeJS_description" xml:space="preserve">
    <value>一个 Node.js 函数，每当将消息添加到指定的服务总线主题时它都会运行</value>
  </data>
  <data name="TimerTriggerCSharp_description" xml:space="preserve">
    <value>将在指定的计划上运行的 C# 函数</value>
  </data>
  <data name="TimerTriggerNodeJS_description" xml:space="preserve">
    <value>将在指定的计划上运行的 Node.js 函数</value>
  </data>
  <data name="TimerTriggerPowerShell_description" xml:space="preserve">
    <value>将在指定的计划上运行的 PowerShell 函数</value>
  </data>
  <data name="timerTrigger_schedule_errorText" xml:space="preserve">
    <value>无效的 Cron 表达式。请查阅&lt;a target='_blank' href='https://azure.microsoft.com/en-us/documentation/articles/functions-bindings-timer/'&gt;文档&lt;/a&gt;以了解详细信息。</value>
  </data>
  <data name="twilioSms_accountsid_help" xml:space="preserve">
    <value>This is your Twilio account SID</value>
  </data>
  <data name="twilioSms_accountsid_label" xml:space="preserve">
    <value>Account SID</value>
  </data>
  <data name="twilioSms_authtoken_help" xml:space="preserve">
    <value>This is your Twilio Auth Token</value>
  </data>
  <data name="twilioSms_authtoken_label" xml:space="preserve">
    <value>Twilio Auth Token</value>
  </data>
  <data name="twilioSms_body_help" xml:space="preserve">
    <value>This is the text body to use for the message. If not specified here, the value can be specified in code.</value>
  </data>
  <data name="twilioSms_body_label" xml:space="preserve">
    <value>Message text</value>
  </data>
  <data name="twilioSms_displayName" xml:space="preserve">
    <value>Twilio SMS</value>
  </data>
  <data name="twilioSms_from_help" xml:space="preserve">
    <value>This is the Twilio phone number the message should be sent from. If not specified here, the value can be specified in code.</value>
  </data>
  <data name="twilioSms_from_label" xml:space="preserve">
    <value>From number</value>
  </data>
  <data name="twilioSms_name_help" xml:space="preserve">
    <value>This is the name of the parameter in the code for output binding to bind to.</value>
  </data>
  <data name="twilioSms_name_label" xml:space="preserve">
    <value>Message parameter name</value>
  </data>
  <data name="twilioSms_to_help" xml:space="preserve">
    <value>This is the phone number the message should be sent to. If not specified here, the value can be specified in code.</value>
  </data>
  <data name="twilioSms_to_label" xml:space="preserve">
    <value>To number</value>
  </data>
  <data name="eventHubTrigger_consumerGroup_errorText" xml:space="preserve">
    <value>使用者组名称必须以字母或数字开头和结尾，并且只能包含小写字母、数字、连字符、句点和下划线。还允许使用 $Default 组。</value>
  </data>
</root>